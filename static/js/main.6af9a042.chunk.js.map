{"version":3,"sources":["Pages/old/App.js","Store/actions.tsx","Store/index.tsx","Model/User.ts","Services/Utilities.ts","Components/LoginComponent/index.tsx","Components/RegisterComponent/index.tsx","Pages/Login/index.tsx","Components/CreatePost/index.tsx","Model/Post.ts","Components/PostComponent/index.tsx","Routes.tsx","Pages/Home/index.tsx","Pages/Profile/index.tsx","Pages/NotFound/index.tsx","index.js","Pages/old/logo.svg"],"names":["App","ACTIONS","login","userAuthenticated","type","LOGIN","logoff","LOGOFF","INITIAL_STATE","undefined","Gender","store","createStore","state","action","Utilities","email","test","date","displayHour","year","getFullYear","month","completeLeadingZeros","getMonth","toString","day","getDate","displayedHour","this","formatHour","displaySeconds","hour","getHours","minutes","getMinutes","seconds","getSeconds","setHours","setMinutes","setSeconds","setMilliseconds","originalDate","getMidnightTime","valueOf","Date","value","numZero","zeros","iCount","slice","FIELD","User","firstName","gender","birthday","lastName","id","friends","_friends","Array","LoginComponent","props","field","errorMessages","Map","displayError","displayHelperText","length","setHelpersText","password","message","validateEmail","set","EMAIL","PASSWORD","submitted","get","handleRegister","a","setState","error","forEach","key","user","NOT_INFORM","getState","dispatch","Actions","parseInt","className","TextField","required","onChange","newValue","target","label","helperText","variant","Button","color","onClick","Component","connect","TABS","RegisterComponent","FIRSTNAME","sex","LASTNAME","newDate","InputLabelProps","shrink","FormControl","SEX","InputLabel","Select","labelId","MenuItem","MALE","FEMALE","FormHelperText","Login","authenticationCanBeChanged","history","push","PossibleRoutes","HOME","selectedTab","subscribe","Register","renderActiveTab","Paper","square","Tabs","event","setSelectedTab","indicatorColor","textColor","centered","aria-label","Tab","CreatePost","VISIBILITY","React","useState","setSubmitted","FRIENDS","visibility","setVisibility","postContent","setPostContent","POST_CONTENT","multiline","rows","margin","PUBLIC","PostVisibility","PostComponent","Card","CardHeader","avatar","Avatar","title","post","getFullName","subheader","formatDate","CardContent","content","CardActions","disableSpacing","IconButton","Post","_user","Home","posts","PRIVATE","console","log","map","Profile","NotFound","ReactDOM","render","path","exact","component","PROFILE","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6af9a042.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { IAction } from \".\";\nimport User from \"../Model/User\";\n\nexport enum ACTIONS {\n    LOGIN,\n    LOGOFF\n}\n\nexport function login(userAuthenticated: User): IAction {\n    return {\n        type: ACTIONS.LOGIN,\n        userAuthenticated: userAuthenticated\n    }\n}\n\nexport function logoff(): IAction {\n    return{\n        type: ACTIONS.LOGOFF\n    }\n}","import { createStore } from 'redux';\nimport { ACTIONS } from './actions';\n\nimport User from '../Model/User';\n\nexport interface IStore {\n    userAuthenticated?: User\n}\n\nexport interface IAction extends IStore{\n    type: string | number;\n}\n\nconst INITIAL_STATE: IStore = {\n    userAuthenticated: undefined\n}\n\nfunction reducer(state: any = INITIAL_STATE, action: IAction){\n    switch(action.type){\n        case (ACTIONS.LOGIN):{\n            return {\n                ...state,\n                userAuthenticated: action.userAuthenticated\n            }}\n        case (ACTIONS.LOGOFF):{\n            return{\n                ...state,\n                userAuthenticated: undefined\n            }\n        }\n\n        default:\n            return state;\n    }\n    \n    if (action.type === ACTIONS.LOGIN){\n        return {\n            ...state,\n            userAuthenticated: action.userAuthenticated\n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducer);\n\nexport default store;","export enum Gender{\n    MALE,\n    FEMALE,\n    NOT_INFORM\n}\n\nexport default class User{\n    id: string = '';\n    email: string;\n    firstName: string;\n    lastName: string;\n    gender: Gender;\n    birthday?: Date;\n    friends: Array<User>;\n\n    _friends: Array<string>;\n\n    constructor(email: string, firstName: string, gender: Gender, birthday?: Date,  lastName: string = ''){\n        this.email = email;\n        this.firstName = firstName;\n        this.gender = gender;\n        \n        this.birthday = birthday;\n        this.lastName = lastName;\n        \n        this.friends = new Array<User>();\n        this._friends = new Array<string>();\n    }\n\n    getFullName(): string{\n        return this.firstName + ' ' + this.lastName;\n    }\n}","export class Utilities{\n    \n    static validateEmail(email: string): boolean {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    static formatDate(date: Date, displayHour: boolean = false): string{\n        const year = date.getFullYear();\n        const month = Utilities.completeLeadingZeros((date.getMonth() + 1).toString(), 2); //Mês começa com 0 = Janeiro\n        const day = Utilities.completeLeadingZeros(date.getDate().toString(), 2);\n        let displayedHour = '';\n        \n        if (displayHour)\n            displayedHour = ' ' + this.formatHour(date);\n\n        return day + '/' + month + '/' + year + displayedHour;\n    }\n    \n    static formatHour(date: Date, displaySeconds: boolean = false): string{\n        const hour = Utilities.completeLeadingZeros(date.getHours().toString(), 2);\n        const minutes = Utilities.completeLeadingZeros(date.getMinutes().toString(), 2);\n        const seconds = displaySeconds ? ':' + Utilities.completeLeadingZeros(date.getSeconds().toString(), 2) : '';\n        return hour + ':' + minutes + seconds;\n    }\n\n    private static getMidnightTime(date: Date): Date {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n\n        return date;\n    }\n\n    static translateDateToText(date: Date): string {\n        let originalDate: Date = date;\n        if (this.getMidnightTime(date).valueOf() === this.getMidnightTime(new Date()).valueOf() )\n            return 'Today at ' + this.formatHour(originalDate); // Today\n        else\n            return '';\n    }\n\n    static completeLeadingZeros(value: string, numZero: number): string {\n        let zeros = '';\n        for (let iCount = 0; iCount < numZero; iCount++)    zeros = '0' + zeros;\n        return (zeros + value).slice(-numZero);\n    }\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport '../../Pages/Login/styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\nimport User, { Gender } from '../../Model/User';\n\n// Icons\n\n\n// Enums\nenum FIELD {\n    EMAIL,\n    FIRSTNAME,\n    LASTNAME,\n    PASSWORD,\n    SEX,\n    BIRHTDAY\n}\n\n// Interfaces\ninterface IProps {\n    dispatch: any,\n    userAuthenticated?: User\n}\n\ninterface IState {\n    submitted: boolean,\n    email: string,\n    password: string\n}\n\nclass LoginComponent extends Component<IProps, IState>{\n    errorMessages: Map<number, string> = new Map<number, string>();\n    \n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            submitted: false,\n            email: '',\n            password: ''\n        };\n\n        // Initializing map\n        for (let field in FIELD)\n            this.errorMessages.set(parseInt(field), '');\n    }\n    \n    // Functions and consts\n    displayError = (field: FIELD): boolean => {\n        return this.displayHelperText(field).length > 0;\n    }\n\n    setHelpersText = (): void => {\n        const {email, password} = this.state;\n\n        let message: string = '';\n\n        // Email\n        message = '';\n        if (!Utilities.validateEmail(email))\n            message =  'Email address is not valid';\n        this.errorMessages.set(FIELD.EMAIL, message);\n\n        // Password\n        message = '';\n        if (password.length === 0)\n            message =  'Password is required';\n        this.errorMessages.set(FIELD.PASSWORD, message);\n    }\n\n    displayHelperText = (field: FIELD): string => {\n        if (this.state.submitted)\n            return this.errorMessages.get(field) as string;\n        else\n            return '';\n    }\n    \n    handleRegister = async () => {\n        this.setState({submitted: true});\n\n        let error: boolean = false;\n        this.errorMessages.forEach((value: string, key: number) => {\n            if (!error)\n                error = value.length > 0;\n        });\n\n        if (!error){\n            const email = this.state.email;\n            const user: User = new User(email, '', Gender.NOT_INFORM);\n\n            if ( (store.getState() as IStore).userAuthenticated == undefined )\n                this.props.dispatch(Actions.login(user));\n            else\n                this.props.dispatch(Actions.logoff());\n        }\n    }\n    \n    render(){\n        const {email, password} = this.state;\n        \n        this.setHelpersText();\n        return(\n            <div className=\"componentContainer componentLoginContainer\">\n                <div className=\"componentWelcome\">\n                    Good to see you again. Welcome!\n                </div>\n\n                <form className=\"componentForm componentLoginForm\">\n                    <TextField\n                        required\n                        error = {this.displayError(FIELD.EMAIL)}\n                        value={email}\n                        onChange = {newValue => this.setState({email: newValue.target.value}) }\n                        id=\"email\"\n                        label=\"E-mail\"\n                        helperText = {this.displayHelperText(FIELD.EMAIL)}\n                        variant=\"outlined\"/>\n\n                    <TextField \n                        required\n                        error = {this.displayError(FIELD.PASSWORD)}\n                        value={password}\n                        onChange = {newValue => this.setState({password: newValue.target.value})}\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        helperText = {this.displayHelperText(FIELD.PASSWORD)}\n                        variant=\"outlined\"/>\n\n                </form>\n\n                <div className=\"formSubmit\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submitButton'\n                        onClick = {this.handleRegister}>\n                        Login\n                    </Button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default connect((state: IStore) => ({\n    userAuthenticated: state.userAuthenticated}) ) (LoginComponent)","// React Imports\nimport React, {Component} from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport '../../Pages/Login/styles.css'\nimport profilePicture from '../../Resources/ProfilePicture.png';\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\nimport User, {Gender} from '../../Model/User';\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\n\n// Enums\nenum FIELD {\n    EMAIL,\n    FIRSTNAME,\n    LASTNAME,\n    PASSWORD,\n    SEX,\n    BIRHTDAY\n}\n\n// Interfaces\ninterface IProps {\n    dispatch: any,\n    userAuthenticated?: User\n}\n\ninterface IState {\n    submitted: boolean,\n    email: string,\n    firstName: string,\n    lastName: string,\n    password: string,\n    sex: Gender,\n    birthday?: Date\n}\n\nclass RegisterComponent extends Component<IProps, IState>{\n    errorMessages: Map<number, string> = new Map<number, string>();\n\n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            submitted: false,\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            sex: Gender.NOT_INFORM,\n            birthday: undefined\n        }\n\n        // Initializing map\n        for (let field in FIELD)\n            this.errorMessages.set(parseInt(field), '');\n    }\n\n    // Functions and consts\n    displayError = (field: FIELD): boolean => {\n        return this.displayHelperText(field).length > 0;\n    }\n\n    setHelpersText = (): void => {\n        const {email, password, firstName} = this.state;\n\n        let message: string = '';\n\n        // Email\n        message = '';\n        if (!Utilities.validateEmail(email))\n            message =  'Email address is not valid';\n        this.errorMessages.set(FIELD.EMAIL, message);\n\n        // FirstName\n        message = '';\n        if (firstName.length === 0)\n            message =  'First Name Required';;\n        this.errorMessages.set(FIELD.FIRSTNAME, message);\n        \n        // Password\n        message = '';\n        if (password.length === 0)\n            message =  'Password is required';\n        this.errorMessages.set(FIELD.PASSWORD, message);\n    }\n\n    displayHelperText = (field: FIELD): string => {\n        if (this.state.submitted)\n            return this.errorMessages.get(field) as string;\n        else\n            return '';\n    }\n    \n    handleRegister = async () => {\n        this.setState({submitted: true});\n\n        let error: boolean = false;\n        this.errorMessages.forEach((value: string, key: number) => {\n            if (!error)\n                error = value.length > 0;\n        });\n\n        if (!error){\n            const {email, firstName, lastName, sex, birthday} = this.state;\n            const user: User = new User(email, firstName, sex, birthday, lastName);\n\n            if ( (store.getState() as IStore).userAuthenticated == undefined )\n                this.props.dispatch(Actions.login(user));\n            else\n                this.props.dispatch(Actions.logoff());\n        }\n    }\n\n    render(){\n        const {email, password, firstName, lastName, sex, birthday} = this.state;\n\n        this.setHelpersText();\n        return(\n            <div className=\"componentContainer\">\n                <div className=\"componentWelcome\">\n                    Welcome to mine, yours, our Social Network!\n                </div>\n    \n                <form className='componentForm'>\n                        <TextField\n                            required\n                            error = {this.displayError(FIELD.EMAIL)}\n                            value={email}\n                            onChange = {newValue => this.setState({email: newValue.target.value}) }\n                            id=\"email\"\n                            label=\"E-mail\"\n                            helperText = {this.displayHelperText(FIELD.EMAIL)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            required\n                            error = {this.displayError(FIELD.PASSWORD)}\n                            value={password}\n                            onChange = {newValue => this.setState({password: newValue.target.value}) }\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            helperText = {this.displayHelperText(FIELD.PASSWORD)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            required\n                            error = {this.displayError(FIELD.FIRSTNAME)}\n                            value={firstName}\n                            onChange = {newValue => this.setState({firstName: newValue.target.value}) }\n                            id=\"firstName\"\n                            label=\"First name\"\n                            helperText = {this.displayHelperText(FIELD.FIRSTNAME)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            id=\"lastName\"\n                            value={lastName}\n                            onChange = {newValue => this.setState({lastName: newValue.target.value}) }\n                            error = {this.displayError(FIELD.LASTNAME)}\n                            label=\"Last name\"\n                            helperText = {this.displayHelperText(FIELD.LASTNAME)}\n                            variant=\"outlined\"/>\n    \n                        <TextField\n                            id=\"date\"\n                            label=\"Date of birth\"\n                            type=\"date\"\n                            value={birthday}\n                            onChange = {newValue => {\n                                let newDate: Date | null;\n                                newDate = new Date(newValue.target.value);\n                                if (newDate.getFullYear() > 1000)\n                                    this.setState({birthday: newDate})\n                            }}\n                            className = 'inputDate'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            />\n    \n                        <FormControl\n                            variant=\"outlined\"\n                            error={this.displayError(FIELD.SEX)}>\n                            <InputLabel id=\"demo-simple-select-error-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-error-label\"\n                                id=\"demo-simple-select-error\"\n                                value={sex}\n                                onChange={newValue => this.setState({sex: newValue.target.value as Gender})}\n                                >\n                                <MenuItem value={Gender.MALE}>Male</MenuItem>\n                                <MenuItem value={Gender.FEMALE}>Female</MenuItem>\n                                <MenuItem value={Gender.NOT_INFORM}>Not informed</MenuItem>\n                            </Select>\n                            <FormHelperText>{this.displayHelperText(FIELD.SEX)}</FormHelperText>\n                        </FormControl>\n    \n                </form>\n    \n                <div className = 'formSubmit'>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submitButton'\n                        onClick = {this.handleRegister}>\n                        Register\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default connect((state: IStore) => ({\n    userAuthenticated: state.userAuthenticated}) ) (RegisterComponent)","// React Imports\nimport React, { Component } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom'\nimport {PossibleRoutes} from '../../Routes';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// Components\nimport LoginComponent from '../../Components/LoginComponent';\nimport RegisterComponent from '../../Components/RegisterComponent';\n\n// Model\nimport User from '../../Model/User';\n\n// Services\n\n// Icons\n\n// Enums\nenum TABS {\n    Login,\n    Register\n}\n\n// Interfaces\ninterface IProps {\n    userAuthenticated?: User,\n    dispatch: any,\n    history: any\n}\n\ninterface IState {\n    selectedTab: TABS\n}\n\nclass Login extends Component<IProps, IState>{\n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            selectedTab: TABS.Login\n        };\n\n        store.subscribe(this.authenticationCanBeChanged);\n    }\n\n    authenticationCanBeChanged = () => {\n        if ((store.getState() as IStore).userAuthenticated !== undefined)\n            this.props.history.push(PossibleRoutes.HOME);\n    }\n\n    setSelectedTab(newValue: TABS){\n        this.setState({selectedTab: newValue});\n    }\n    \n    renderActiveTab(){\n        switch (this.state.selectedTab) {\n            case TABS.Login:\n                return <LoginComponent/>\n            case TABS.Register:\n                return <RegisterComponent/>\n            default:\n                return <h1>Falha no sistema</h1>\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"login-container\">\n                {this.renderActiveTab()}\n\n                <Paper square className='bottomTabs'>\n                    <Tabs\n                    value={this.state.selectedTab}\n                    onChange={(event, value) => this.setSelectedTab(value) }\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    aria-label=\"icon label tabs example\">\n                        <Tab value = {TABS.Login}    label=\"Login\" />\n                        <Tab value = {TABS.Register} label=\"Create account\" />\n                    </Tabs>\n                </Paper>\n\n        </div>\n        );\n    }\n}\n\nexport default Login;","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\n\nexport default function CreatePost(){\n    // Enums\n    enum VISIBILITY {\n        FRIENDS = 'Friends',\n        PUBLIC = 'Public'\n    }\n\n    enum FIELD {\n        POST_CONTENT\n    }\n\n    // State\n    const [submitted, setSubmitted] = React.useState(false);\n    const [visibility, setVisibility] = React.useState(VISIBILITY.FRIENDS);\n    const [postContent, setPostContent] = React.useState('');\n\n    // Functions and consts\n    const displayError = (field: FIELD): boolean => {\n        return displayHelperText(field).length > 0;\n    }\n\n    const displayHelperText = (field: FIELD): string => {\n        if (!submitted)\n            return '';\n\n        switch (field){\n            case FIELD.POST_CONTENT:\n                if (postContent.length === 0)\n                    return 'Post content required';\n                else\n                    return '';\n\n            default:\n                return '';\n        }\n    }\n\n    async function handlePost(){\n        setSubmitted(true);\n    }\n\n    return(\n        <div className=\"createPostContainer\">\n\n            <div className=\"contentArea\">\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"What's going on?\"\n                    multiline\n                    rows=\"4\"\n                    value={postContent}\n                    onChange = {newValue => setPostContent(newValue.target.value)}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    error = {displayError(FIELD.POST_CONTENT)}\n                    helperText = {displayHelperText(FIELD.POST_CONTENT)}\n                    />\n            </div>\n\n            <div className=\"bottomButtons\">\n                <FormControl \n                    variant=\"outlined\"\n                    className = 'formChooseVisibility'>\n                    <Select\n                        labelId=\"demo-simple-select-error-label\"\n                        id=\"demo-simple-select-error\"\n                        value={visibility}\n                        onChange={newValue => setVisibility(newValue.target.value as VISIBILITY)}\n                        >\n                        <MenuItem value={VISIBILITY.FRIENDS}>{VISIBILITY.FRIENDS}</MenuItem>\n                        <MenuItem value={VISIBILITY.PUBLIC}>{VISIBILITY.PUBLIC}</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {handlePost}\n                    className = 'formSubmit'>\n                    Post\n                </Button>\n            </div>\n        </div>\n    );\n}","import User from './User';\n\nexport enum PostVisibility{\n    PUBLIC,\n    PRIVATE\n}\n\nexport default class Post {\n    id: string = '';\n    user: User;\n    date: Date;\n    content: string;\n    history: Array<Post>;\n    visibility: PostVisibility;\n\n    _user: string;\n\n    constructor(user: User, date: Date, content: string, visibility: PostVisibility = PostVisibility.PUBLIC){\n        this.user = user;\n        this._user = user.id;\n        this.date = date;\n        this.content = content;\n        this.visibility = visibility;\n\n        this.history = new Array<Post>();\n    }\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Post from '../../Model/Post';\n\ninterface Props {\n    post: Post\n}\n\ninterface State {\n\n}\n\nexport default class PostComponent extends Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div className=\"postContainer\">\n                <Card className='cardContainer'>\n                    <CardHeader\n                        avatar = {<Avatar aria-label=\"recipe\"> C </Avatar>}\n                        title={this.props.post.user.getFullName()}\n                        subheader={Utilities.formatDate(this.props.post.date, true)}/>\n                    \n                    <CardContent>\n                        {this.props.post.content}\n                    </CardContent>\n\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"edit\">\n                            <EditIcon />\n                        </IconButton>\n                        \n                        <IconButton aria-label=\"delete\">\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </CardActions>\n\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Login from './Pages/Login';\nimport Home from './Pages/Home';\nimport Profile from './Pages/Profile';\nimport NotFound from './Pages/NotFound';\n\nexport enum PossibleRoutes{\n    LOGIN = '/login',\n    HOME = '/home',\n    PROFILE = '/profile'\n}\n\nexport default function Routes(){\n    return(\n        <Provider store={store} >\n            <BrowserRouter>\n                <Route path='/' exact component={Login}/>\n                <Route path={PossibleRoutes.LOGIN} component={Login}/>\n                <Route path={PossibleRoutes.HOME} component={Home}/>\n                <Route path={PossibleRoutes.PROFILE} component={Profile}/>\n                <Route path='*' component={NotFound}/>\n            </BrowserRouter>\n        </Provider>\n    )\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\n\n// Components\nimport CreatePost from '../../Components/CreatePost';\nimport PostComponent from '../../Components/PostComponent';\n\n// Model\nimport Post, { PostVisibility } from '../../Model/Post';\nimport User, { Gender } from '../../Model/User';\n\n// Services\n\n// Icons\n\ninterface Props {\n\n}\n\ninterface State {\n    user: User,\n    posts: Array<Post>\n}\n\nexport default class Home extends Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n\n        const user: User = new User('claudineibjr@hotmail.com', 'Claudinei', Gender.MALE, new Date(1996, 9, 27), 'Brito Junior')\n        this.state = {\n            user: user,\n            posts: [\n                new Post(user, new Date(), 'Hello World', PostVisibility.PUBLIC),\n                new Post(user, new Date(), 'Hoje estou estudando React', PostVisibility.PUBLIC),\n                new Post(user, new Date(), 'Isso aqui ninguém deveria ficar sabendo', PostVisibility.PRIVATE),\n            ]\n        }\n    }\n\n    render(){\n        console.log(this.state.posts);\n        const posts =   this.state.posts.map((post, key) => \n                            <PostComponent post = {post}/>\n                        );\n\n        return(\n            <div className=\"homePageContainer\">\n                <CreatePost/>\n                \n                {posts}\n            </div>\n        );\n    }\n}","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\n\n// Components\n\n// Model\n\n// Services\n\n// Icons\n\n\nexport default function Profile(){\n    return (\n        <h1>Hello World! Profile</h1>\n    );\n}","// React Imports\nimport React from 'react';\n\nexport default function NotFound(){\n    return (\n        <h1>Error 404! Page not found</h1>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/old/App';\nimport Routes from './Routes';\n\nimport './Styles/general.css';\n\nReactDOM.render(<Routes/>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}