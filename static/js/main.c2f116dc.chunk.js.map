{"version":3,"sources":["Pages/old/App.js","Store/actions.tsx","Store/index.tsx","Components/CustomSnackBar/index.tsx","Services/Utilities.ts","Services/Firebase/ConfidentialInfo.ts","Services/Firebase/Firebase.ts","Model/User.ts","Services/Firebase/FirebaseAuth.ts","Components/LoginComponent/index.tsx","Services/Firebase/Database/UserDB.ts","Components/RegisterComponent/index.tsx","Pages/Login/index.tsx","Components/CreatePost/index.tsx","Model/Post.ts","Components/PostComponent/index.tsx","Routes.tsx","Pages/Home/index.tsx","Pages/Profile/index.tsx","Pages/NotFound/index.tsx","index.js","Pages/old/logo.svg"],"names":["App","ACTIONS","login","userAuthenticated","type","LOGIN","INITIAL_STATE","undefined","VARIANT","store","createStore","state","action","LOGOFF","CustomSnackBar","props","icon","text","handleClose","variant","show","WARNING","SUCCESS","ERROR","INFO","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","id","className","IconButton","key","aria-label","color","onClick","Utilities","email","test","date","displayHour","year","getFullYear","month","completeLeadingZeros","getMonth","toString","day","getDate","displayedHour","this","formatHour","displaySeconds","hour","getHours","minutes","getMinutes","seconds","getSeconds","setHours","setMinutes","setSeconds","setMilliseconds","originalDate","getMidnightTime","valueOf","Date","value","numZero","zeros","iCount","slice","ConfidentialInfo","initializeFirebase","firebase","apps","length","name","initializeApp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Gender","firebaseApp","FirebaseAuth","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","info","catch","error","signInWithEmailAndPassword","sendPasswordResetEmail","FIELD","User","firstName","gender","birthday","lastName","friends","_friends","Array","getTime","_user","Object","keys","requests","map","user","UserDB","database","ref","update","getUpdatable","userID","once","dataSnapshot","getUser","exportVal","LoginComponent","field","errorMessages","Map","displayError","displayHelperText","setHelpersText","validateEmail","set","EMAIL","PASSWORD","submitted","get","handleRegister","a","setState","forEach","loginUser","uid","dispatch","Actions","snackBarText","showSnackBar","parseInt","TextField","required","onChange","newValue","target","label","helperText","Button","Component","connect","TABS","RegisterComponent","FIRSTNAME","sex","createUser","NOT_INFORM","LASTNAME","newDate","InputLabelProps","shrink","FormControl","SEX","InputLabel","Select","labelId","MenuItem","MALE","FEMALE","FormHelperText","Login","authenticationCanBeChanged","getState","history","push","PossibleRoutes","HOME","selectedTab","subscribe","Register","renderActiveTab","Paper","square","Tabs","event","setSelectedTab","indicatorColor","textColor","centered","Tab","CreatePost","VISIBILITY","React","useState","setSubmitted","FRIENDS","visibility","setVisibility","postContent","setPostContent","POST_CONTENT","multiline","rows","margin","PUBLIC","PostVisibility","PostComponent","Card","CardHeader","avatar","Avatar","title","post","getFullName","subheader","formatDate","CardContent","content","CardActions","disableSpacing","Post","Home","posts","PRIVATE","console","log","Profile","NotFound","style","textAlign","to","ReactDOM","render","basename","process","path","exact","component","PROFILE","document","getElementById","module","exports"],"mappings":"8ZAyBeA,ICtBHC,E,uBAKL,SAASC,EAAMC,GAClB,MAAO,CACHC,KAAMH,EAAQI,MACdF,kBAAmBA,G,mlBARfF,O,iBAAAA,I,oBAAAA,M,KCUZ,IAAMK,EAAwB,CAC1BH,uBAAmBI,GA+BvB,ICVYC,EDYGC,EAFDC,aA5Bd,WAA8D,IAA7CC,EAA4C,uDAA/BL,EAAeM,EAAgB,uCACzD,OAAOA,EAAOR,MACV,KAAMH,EAAQI,MACV,OAAO,EAAP,GACOM,EADP,CAEIR,kBAAmBS,EAAOT,oBAElC,KAAMF,EAAQY,OACV,YACOF,EADP,CAEIR,uBAAmBI,IAI3B,QACI,OAAOI,EAGf,OAAIC,EAAOR,OAASH,EAAQI,MACjB,EAAP,GACOM,EADP,CAEIR,kBAAmBS,EAAOT,oBAI3BQ,K,sPCOI,SAASG,EAAeC,GAAe,IAG9CC,EAFIC,EAAqCF,EAArCE,KAAMC,EAA+BH,EAA/BG,YAAaC,EAAkBJ,EAAlBI,QAASC,EAASL,EAATK,KAGpC,OAAOD,GACH,KAAKX,EAAQa,QACTL,EAAO,kBAAC,IAAD,MAAiB,MAC5B,KAAKR,EAAQc,QACTN,EAAO,kBAAC,IAAD,MAAqB,MAChC,KAAKR,EAAQe,MACTP,EAAO,kBAAC,IAAD,MAAe,MAC1B,KAAKR,EAAQgB,KACTR,EAAO,kBAAC,IAAD,MAGf,OACI,kBAACS,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,KAAMT,EACNU,iBAAkB,IAClBC,QAASb,EACTc,aAAc,CACV,mBAAoB,cAExBC,QAAY,0BAAMC,GAAG,aAAaC,UAAU,WAC3BnB,EACAC,GAEjBL,OAAQ,CAIJ,kBAACwB,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNJ,UAAU,QACVK,QAAStB,GACb,kBAAC,IAAD,QAGJiB,UAAW,YAAchB,K,SA1DzBX,K,kBAAAA,E,kBAAAA,E,cAAAA,E,aAAAA,M,KCnCL,IAAMiC,EAAb,2GAEyBC,GAEjB,MADS,4JACCC,KAAKD,KAJvB,iCAOsBE,GAAkD,IAAtCC,EAAqC,wDACzDC,EAAOF,EAAKG,cACZC,EAAQP,EAAUQ,sBAAsBL,EAAKM,WAAa,GAAGC,WAAY,GACzEC,EAAMX,EAAUQ,qBAAqBL,EAAKS,UAAUF,WAAY,GAClEG,EAAgB,GAKpB,OAHIT,IACAS,EAAgB,IAAMC,KAAKC,WAAWZ,IAEnCQ,EAAM,IAAMJ,EAAQ,IAAMF,EAAOQ,IAhBhD,iCAmBsBV,GAAqD,IAAzCa,EAAwC,wDAC5DC,EAAOjB,EAAUQ,qBAAqBL,EAAKe,WAAWR,WAAY,GAClES,EAAUnB,EAAUQ,qBAAqBL,EAAKiB,aAAaV,WAAY,GACvEW,EAAUL,EAAiB,IAAMhB,EAAUQ,qBAAqBL,EAAKmB,aAAaZ,WAAY,GAAK,GACzG,OAAOO,EAAO,IAAME,EAAUE,IAvBtC,sCA0BmClB,GAM3B,OALAA,EAAKoB,SAAS,GACdpB,EAAKqB,WAAW,GAChBrB,EAAKsB,WAAW,GAChBtB,EAAKuB,gBAAgB,GAEdvB,IAhCf,0CAmC+BA,GACvB,IAAIwB,EAAqBxB,EACzB,OAAIW,KAAKc,gBAAgBzB,GAAM0B,YAAcf,KAAKc,gBAAgB,IAAIE,MAAQD,UACnE,YAAcf,KAAKC,WAAWY,GAE9B,KAxCnB,2CA2CgCI,EAAeC,GAEvC,IADA,IAAIC,EAAQ,GACHC,EAAS,EAAGA,EAASF,EAASE,IAAaD,EAAQ,IAAMA,EAClE,OAAQA,EAAQF,GAAOI,OAAOH,OA9CtC,K,iBCAqBI,E,kCCGd,SAASC,IACZ,IAAK,IAAIH,EAAS,EAAGA,EAASI,IAASC,KAAKC,OAAQN,IAChD,GAAkC,aAA9BI,IAASC,KAAKL,GAAQO,KACtB,OAERH,IAASI,cAAcN,EAAiBO,gBDRvBP,EACHO,eAAiB,CAC3BC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,gBACnBC,MAAO,8CCGR,ICXKC,EDWCC,EAAcd,IERde,EAAb,wGAEsBpD,EAAeqD,GAG7B,OAFAjB,IAEO,IAAIkB,SAAQ,SAACC,EAASC,GACzBL,EAAYM,OAAOC,+BAA+B1D,EAAOqD,GAAUM,MAAK,SAACC,GACrEL,EAAQK,MACTC,OAAM,SAACC,GACNN,EAAOM,WATvB,gCAcqB9D,EAAeqD,GAG5B,OAFAjB,IAEO,IAAIkB,SAAQ,SAACC,EAASC,GACzBL,EAAYM,OAAOM,2BAA2B/D,EAAOqD,GAAUM,MAAK,SAACC,GACjEL,EAAQK,MACTC,OAAM,SAACC,GACNN,EAAOM,WArBvB,6EA0B+B9D,GA1B/B,wEA2BQoC,IA3BR,SA6Bce,EAAYM,OAAOO,uBAAuBhE,GA7BxD,0G,SDHYkD,O,eAAAA,I,mBAAAA,I,4BAAAA,M,SEsCPe,KFhCgBC,G,WAWjB,WAAYlE,EAAemE,EAAmBC,EAAgBC,GAAyC,IAAvBC,EAAsB,uDAAH,GAAG,yBAVtG9E,GAAa,GAUyF,KATtGQ,WASsG,OARtGmE,eAQsG,OAPtGG,cAOsG,OANtGF,YAMsG,OALtGC,cAKsG,OAJtGE,aAIsG,OAFtGC,cAEsG,EAClG3D,KAAKb,MAAQA,EACba,KAAKsD,UAAYA,EACjBtD,KAAKuD,OAASA,EAEdvD,KAAKwD,SAAWA,EAChBxD,KAAKyD,SAAWA,EAEhBzD,KAAK0D,QAAU,IAAIE,MACnB5D,KAAK2D,SAAW,IAAIC,M,0DAIpB,OAAO5D,KAAKsD,UAAY,IAAMtD,KAAKyD,W,qCAInC,MAAO,CACH,GAAMzD,KAAKrB,GACX,MAASqB,KAAKb,MACd,UAAaa,KAAKsD,UAClB,SAAYtD,KAAKyD,SACjB,OAAUzD,KAAKuD,OACf,cAA6BvG,GAAjBgD,KAAKwD,SAAwBxD,KAAKwD,SAASK,UAAY,KACnE,QAAW7D,KAAK2D,a,+BAITG,GACX,IAAInF,EAAamF,EAAMnF,GACnBQ,EAAgB2E,EAAM3E,MACtBmE,EAAoBQ,EAAMR,UAC1BG,EAAmBK,EAAML,SACzBF,EAAiBO,EAAMP,OACvBC,EAA6BM,EAAMN,SAAW,IAAIxC,KAAK8C,EAAMN,eAAYxG,EACzE0G,EAAyBI,EAAMJ,QAAUK,OAAOC,KAAKF,EAAMG,UAAUC,KAAI,SAAA9C,GAAM,OAAI0C,EAAMJ,QAAQtC,MAAW,IAAIwC,MAEhHO,EAAa,IAAId,EAAKlE,EAAOmE,EAAWC,EAAQC,EAAUC,GAI9D,OAHAU,EAAKxF,GAAKA,EACVwF,EAAKR,SAAWD,EAETS,M,KGrDFC,GAAb,iJAC4BD,GAD5B,wEAEQ5C,IAFR,SAIce,EAAY+B,WAAWC,IAAI,SAAWH,EAAKxF,IAAI4F,OAAOJ,EAAKK,gBAJzE,gIAOmBC,GAGX,OAFAlD,IAEO,IAAIkB,SAAQ,SAACC,EAASC,GACzBL,EAAY+B,WAAWC,IAAI,SAAWG,GAAQC,KAAK,SAAS,SAACC,GACzD,IAAMR,EAAad,GAAKuB,QAAQD,EAAaE,aAC7CnC,EAAQyB,aAbxB,MDiCKf,S,KAAAA,G,iBAAAA,M,yBAAAA,M,uBAAAA,M,uBAAAA,M,aAAAA,M,2BEHAA,GF0BC0B,G,YAGF,WAAYtH,GAAe,IAAD,EAYtB,IAAK,IAAIuH,KAZa,qBACtB,4CAAMvH,KAHVwH,cAAqC,IAAIC,IAEf,EAiB1BC,aAAe,SAACH,GACZ,OAAO,EAAKI,kBAAkBJ,GAAOrD,OAAS,GAlBxB,EAqB1B0D,eAAiB,WAAa,IAAD,EACC,EAAKhI,MAAxB+B,EADkB,EAClBA,MAAOqD,EADW,EACXA,SAEV9D,EAAkB,GAGtBA,EAAU,GACLQ,EAAUmG,cAAclG,KACzBT,EAAW,8BACf,EAAKsG,cAAcM,IAAIlC,EAAMmC,MAAO7G,GAGpCA,EAAU,GACc,IAApB8D,EAASd,SACThD,EAAW,wBACf,EAAKsG,cAAcM,IAAIlC,EAAMoC,SAAU9G,IApCjB,EAuC1ByG,kBAAoB,SAACJ,GACjB,OAAI,EAAK3H,MAAMqI,UACJ,EAAKT,cAAcU,IAAIX,GAEvB,IA3CW,EA8C1BY,eA9C0B,sBA8CT,kCAAAC,EAAA,sDACb,EAAKC,SAAS,CAACJ,WAAW,IAEtBxC,GAAiB,EACrB,EAAK+B,cAAcc,SAAQ,SAAC7E,EAAenC,GAClCmE,IACDA,EAAQhC,EAAMS,OAAS,MAG1BuB,IAAO,EACkB,EAAK7F,MAAxB+B,EADA,EACAA,MAAOqD,EADP,EACOA,SACdD,EAAawD,UAAU5G,EAAOqD,GAAUM,MAAK,SAACC,GAC1CqB,GAAOQ,QAAQ7B,EAAKoB,KAAM6B,KAAKlD,MAAK,SAACqB,GACjC,EAAK3G,MAAMyI,SAASC,EAAc/B,UAEvCnB,MAJH,uCAIS,WAAOC,GAAP,SAAA2C,EAAA,sEACC,EAAKC,SAAS,CAACM,aAAclD,EAAMvE,UADpC,OAEL,EAAKmH,SAAS,CAACO,cAAc,IAFxB,2CAJT,wDAXS,2CA9CS,EAoE1BzI,YAAc,kBAAM,EAAKkI,SAAS,CAACO,cAAc,KAjE7C,EAAKhJ,MAAQ,CACTqI,WAAW,EACXtG,MAAO,GACPqD,SAAU,GACV4D,cAAc,EACdD,aAAc,IAIA/C,EACd,EAAK4B,cAAcM,IAAIe,SAAStB,GAAQ,IAbtB,S,sEAsEjB,IAAD,SACkD/E,KAAK5C,MAApD+B,EADH,EACGA,MAAOqD,EADV,EACUA,SAAU4D,EADpB,EACoBA,aAAcD,EADlC,EACkCA,aAGtC,OADAnG,KAAKoF,iBAED,yBAAKxG,UAAU,8CACX,yBAAKA,UAAU,oBAAf,mCAIA,kBAACrB,EAAD,CACIK,QAAWX,EAAQe,MACnBL,YAAaqC,KAAKrC,YAClBE,KAAMuI,EACN1I,KAAMyI,IAEV,0BAAMvH,UAAU,oCACZ,kBAAC0H,EAAA,EAAD,CACIC,UAAQ,EACRtD,MAASjD,KAAKkF,aAAa9B,EAAMmC,OACjCtE,MAAO9B,EACPqH,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAAC1G,MAAOsH,EAASC,OAAOzF,SAC9DtC,GAAG,QACHgI,MAAM,SACNC,WAAc5G,KAAKmF,kBAAkB/B,EAAMmC,OAC3C3H,QAAQ,aAEZ,kBAAC0I,EAAA,EAAD,CACIC,UAAQ,EACRtD,MAASjD,KAAKkF,aAAa9B,EAAMoC,UACjCvE,MAAOuB,EACPgE,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAACrD,SAAUiE,EAASC,OAAOzF,SACjEtC,GAAG,WACHgI,MAAM,WACN9J,KAAK,WACL+J,WAAc5G,KAAKmF,kBAAkB/B,EAAMoC,UAC3C5H,QAAQ,cAIhB,yBAAKgB,UAAU,cACX,kBAACiI,EAAA,EAAD,CACIjJ,QAAQ,YACRoB,MAAM,UACNJ,UAAU,eACVK,QAAWe,KAAK2F,gBAJpB,e,GAlHSmB,aAgIdC,gBAAQ,SAAC3J,GAAD,MAAoB,CACvCR,kBAAmBQ,EAAMR,qBADdmK,CACqCjC,I,4DE3J/C1B,O,iBAAAA,I,yBAAAA,I,uBAAAA,I,uBAAAA,I,aAAAA,I,wBAAAA,Q,SCHA4D,GD8BCC,G,YAGF,WAAYzJ,GAAe,IAAD,EAgBtB,IAAK,IAAIuH,KAhBa,qBACtB,4CAAMvH,KAHVwH,cAAqC,IAAIC,IAEf,EAqB1BC,aAAe,SAACH,GACZ,OAAO,EAAKI,kBAAkBJ,GAAOrD,OAAS,GAtBxB,EAyB1B0D,eAAiB,WAAa,IAAD,EACY,EAAKhI,MAAnC+B,EADkB,EAClBA,MAAOqD,EADW,EACXA,SAAUc,EADC,EACDA,UAEpB5E,EAAkB,GAGtBA,EAAU,GACLQ,EAAUmG,cAAclG,KACzBT,EAAW,8BACf,EAAKsG,cAAcM,IAAIlC,GAAMmC,MAAO7G,GAGpCA,EAAU,GACe,IAArB4E,EAAU5B,SACVhD,EAAW,uBACf,EAAKsG,cAAcM,IAAIlC,GAAM8D,UAAWxI,GAGxCA,EAAU,GACc,IAApB8D,EAASd,SACThD,EAAW,wBACf,EAAKsG,cAAcM,IAAIlC,GAAMoC,SAAU9G,IA9CjB,EAiD1ByG,kBAAoB,SAACJ,GACjB,OAAI,EAAK3H,MAAMqI,UACJ,EAAKT,cAAcU,IAAIX,GAEvB,IArDW,EAwD1BY,eAxD0B,sBAwDT,4CAAAC,EAAA,sDACb,EAAKC,SAAS,CAACJ,WAAW,IAEtBxC,GAAiB,EACrB,EAAK+B,cAAcc,SAAQ,SAAC7E,EAAenC,GAClCmE,IACDA,EAAQhC,EAAMS,OAAS,MAG1BuB,IAAO,EACsD,EAAK7F,MAA5D+B,EADA,EACAA,MAAOqD,EADP,EACOA,SAAUc,EADjB,EACiBA,UAAWG,EAD5B,EAC4BA,SAAU0D,EADtC,EACsCA,IAAK3D,EAD3C,EAC2CA,SAC9CW,EAAa,IAAId,GAAKlE,EAAOmE,EAAW6D,EAAK3D,EAAUC,GAE3DlB,EAAa6E,WAAWjI,EAAOqD,GAAUM,KAAzC,uCAA8C,WAAOC,GAAP,SAAA6C,EAAA,6DAC1CzB,EAAKxF,GAAKoE,EAAKoB,KAAM6B,IADqB,SAEpC5B,GAAOgD,WAAWjD,GAFkB,OAG1C,EAAK3G,MAAMyI,SAASC,EAAc/B,IAHQ,2CAA9C,uDAIGnB,MAJH,uCAIU,WAAOC,GAAP,SAAA2C,EAAA,sEACA,EAAKC,SAAS,CAACM,aAAclD,EAAMvE,UADnC,OAEN,EAAKmH,SAAS,CAACO,cAAc,IAFvB,2CAJV,wDAbS,2CAxDS,EAgF1BzI,YAAc,kBAAM,EAAKkI,SAAS,CAACO,cAAc,KA7E7C,EAAKhJ,MAAQ,CACTqI,WAAW,EACXtG,MAAO,GACPmE,UAAW,GACXG,SAAU,GACVjB,SAAU,GACV2E,IAAK9E,EAAOgF,WACZ7D,cAAUxG,EACVoJ,cAAc,EACdD,aAAc,IAIA/C,GACd,EAAK4B,cAAcM,IAAIe,SAAStB,GAAQ,IAjBtB,S,sEAkFjB,IAAD,SACsF/E,KAAK5C,MAAxF+B,EADH,EACGA,MAAOqD,EADV,EACUA,SAAUc,EADpB,EACoBA,UAAWG,EAD/B,EAC+BA,SAAU0D,EADzC,EACyCA,IAAK3D,EAD9C,EAC8CA,SAAU4C,EADxD,EACwDA,aAAcD,EADtE,EACsEA,aAG1E,OADAnG,KAAKoF,iBAED,yBAAKxG,UAAU,sBACX,yBAAKA,UAAU,oBAAf,+CAIA,kBAACrB,EAAD,CACIK,QAAWX,EAAQe,MACnBL,YAAaqC,KAAKrC,YAClBE,KAAMuI,EACN1I,KAAMyI,IAEV,0BAAMvH,UAAU,iBACR,kBAAC0H,EAAA,EAAD,CACIC,UAAQ,EACRtD,MAASjD,KAAKkF,aAAa9B,GAAMmC,OACjCtE,MAAO9B,EACPqH,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAAC1G,MAAOsH,EAASC,OAAOzF,SAC9DtC,GAAG,QACHgI,MAAM,SACNC,WAAc5G,KAAKmF,kBAAkB/B,GAAMmC,OAC3C3H,QAAQ,aAEZ,kBAAC0I,EAAA,EAAD,CACIC,UAAQ,EACRtD,MAASjD,KAAKkF,aAAa9B,GAAMoC,UACjCvE,MAAOuB,EACPgE,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAACrD,SAAUiE,EAASC,OAAOzF,SACjEtC,GAAG,WACHgI,MAAM,WACN9J,KAAK,WACL+J,WAAc5G,KAAKmF,kBAAkB/B,GAAMoC,UAC3C5H,QAAQ,aAEZ,kBAAC0I,EAAA,EAAD,CACIC,UAAQ,EACRtD,MAASjD,KAAKkF,aAAa9B,GAAM8D,WACjCjG,MAAOqC,EACPkD,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAACvC,UAAWmD,EAASC,OAAOzF,SAClEtC,GAAG,YACHgI,MAAM,aACNC,WAAc5G,KAAKmF,kBAAkB/B,GAAM8D,WAC3CtJ,QAAQ,aAEZ,kBAAC0I,EAAA,EAAD,CACI3H,GAAG,WACHsC,MAAOwC,EACP+C,SAAY,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAACpC,SAAUgD,EAASC,OAAOzF,SACjEgC,MAASjD,KAAKkF,aAAa9B,GAAMkE,UACjCX,MAAM,YACNC,WAAc5G,KAAKmF,kBAAkB/B,GAAMkE,UAC3C1J,QAAQ,aAEZ,kBAAC0I,EAAA,EAAD,CACI3H,GAAG,OACHgI,MAAM,gBACN9J,KAAK,OACLoE,MAAOuC,EACPgD,SAAY,SAAAC,GACR,IAAIc,GACJA,EAAU,IAAIvG,KAAKyF,EAASC,OAAOzF,QACvBzB,cAAgB,KACxB,EAAKqG,SAAS,CAACrC,SAAU+D,KAEjC3I,UAAY,YACZ4I,gBAAiB,CACbC,QAAQ,GAEZ7J,QAAQ,aAGZ,kBAAC8J,GAAA,EAAD,CACI9J,QAAQ,WACRqF,MAAOjD,KAAKkF,aAAa9B,GAAMuE,MAC/B,kBAACC,GAAA,EAAD,CAAYjJ,GAAG,kCAAf,UACA,kBAACkJ,GAAA,EAAD,CACIC,QAAQ,iCACRnJ,GAAG,2BACHsC,MAAOkG,EACPX,SAAU,SAAAC,GAAQ,OAAI,EAAKZ,SAAS,CAACsB,IAAKV,EAASC,OAAOzF,UAE1D,kBAAC8G,GAAA,EAAD,CAAU9G,MAAOoB,EAAO2F,MAAxB,QACA,kBAACD,GAAA,EAAD,CAAU9G,MAAOoB,EAAO4F,QAAxB,UACA,kBAACF,GAAA,EAAD,CAAU9G,MAAOoB,EAAOgF,YAAxB,iBAEJ,kBAACa,GAAA,EAAD,KAAiBlI,KAAKmF,kBAAkB/B,GAAMuE,QAK1D,yBAAK/I,UAAY,cACb,kBAACiI,EAAA,EAAD,CACIjJ,QAAQ,YACRoB,MAAM,UACNJ,UAAU,eACVK,QAAWe,KAAK2F,gBAJpB,kB,GApLYmB,aAkMjBC,gBAAQ,SAAC3J,GAAD,MAAoB,CACvCR,kBAAmBQ,EAAMR,qBADdmK,CACqCE,K,SCjO/CD,O,iBAAAA,I,wBAAAA,Q,SAsEUmB,G,YArDX,WAAY3K,GAAe,IAAD,8BACtB,4CAAMA,KASV4K,2BAA6B,gBAC8BpL,IAAlDE,EAAMmL,WAAsBzL,mBAC7B,EAAKY,MAAM8K,QAAQC,KAAKC,GAAeC,OAT3C,EAAKrL,MAAQ,CACTsL,YAAa1B,GAAKmB,OAGtBjL,EAAMyL,UAAU,EAAKP,4BAPC,E,4EAeX3B,GACXzG,KAAK6F,SAAS,CAAC6C,YAAajC,M,wCAI5B,OAAQzG,KAAK5C,MAAMsL,aACf,KAAK1B,GAAKmB,MACN,OAAO,kBAAC,GAAD,MACX,KAAKnB,GAAK4B,SACN,OAAO,kBAAC,GAAD,MACX,QACI,OAAO,mD,+BAIV,IAAD,OACJ,OACI,yBAAKhK,UAAU,mBACVoB,KAAK6I,kBAEN,kBAACC,EAAA,EAAD,CAAOC,QAAM,EAACnK,UAAU,cACpB,kBAACoK,EAAA,EAAD,CACA/H,MAAOjB,KAAK5C,MAAMsL,YAClBlC,SAAU,SAACyC,EAAOhI,GAAR,OAAkB,EAAKiI,eAAejI,IAChDkI,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRtK,aAAW,2BACP,kBAACuK,EAAA,EAAD,CAAKrI,MAAS+F,GAAKmB,MAAUxB,MAAM,UACnC,kBAAC2C,EAAA,EAAD,CAAKrI,MAAS+F,GAAK4B,SAAUjC,MAAM,0B,GA7CvCG,a,yBCxBL,SAASyC,KAAY,IAE3BC,EAKApG,GAP2B,SAE3BoG,KAF2B,kBAE3BA,EAF2B,iBAE3BA,MAF2B,cAO3BpG,OAP2B,gCAO3BA,MAP2B,SAiBV2B,EAjBU,EAYE0E,IAAMC,UAAS,GAZjB,oBAYzBjE,EAZyB,KAYdkE,EAZc,OAaIF,IAAMC,SAASF,EAAWI,SAb9B,oBAazBC,EAbyB,KAabC,EAba,OAcML,IAAMC,SAAS,IAdrB,oBAczBK,EAdyB,KAcZC,EAdY,KAqB1B7E,EAAoB,SAACJ,GACvB,IAAKU,EACD,MAAO,GAEX,OAAQV,GACJ,KAAK3B,EAAM6G,aACP,OAA2B,IAAvBF,EAAYrI,OACL,wBAEA,GAEf,QACI,MAAO,KAjCa,4CAqChC,sBAAAkE,EAAA,sDACI+D,GAAa,GADjB,4CArCgC,sBAyChC,OACI,yBAAK/K,UAAU,uBAEX,yBAAKA,UAAU,eACX,kBAAC0H,EAAA,EAAD,CACI3H,GAAG,4BACHgI,MAAM,mBACNuD,WAAS,EACTC,KAAK,IACLlJ,MAAO8I,EACPvD,SAAY,SAAAC,GAAQ,OAAIuD,EAAevD,EAASC,OAAOzF,QACvDmJ,OAAO,SACPxM,QAAQ,WACRqF,OArCM8B,EAqCgB3B,EAAM6G,aApCjC9E,EAAkBJ,GAAOrD,OAAS,GAqC7BkF,WAAczB,EAAkB/B,EAAM6G,iBAI9C,yBAAKrL,UAAU,iBACX,kBAAC8I,GAAA,EAAD,CACI9J,QAAQ,WACRgB,UAAY,wBACZ,kBAACiJ,GAAA,EAAD,CACIC,QAAQ,iCACRnJ,GAAG,2BACHsC,MAAO4I,EACPrD,SAAU,SAAAC,GAAQ,OAAIqD,EAAcrD,EAASC,OAAOzF,SAEpD,kBAAC8G,GAAA,EAAD,CAAU9G,MAAOuI,EAAWI,SAAUJ,EAAWI,SACjD,kBAAC7B,GAAA,EAAD,CAAU9G,MAAOuI,EAAWa,QAASb,EAAWa,UAIxD,kBAACxD,EAAA,EAAD,CACIjJ,QAAQ,YACRoB,MAAM,UACNC,QA7EgB,2CA8EhBL,UAAY,cAJhB,U,WChGJ0L,G,0FC+CSC,G,YACjB,WAAY/M,GAAc,qEAChBA,I,sEAIN,OACI,yBAAKoB,UAAU,iBACX,kBAAC4L,GAAA,EAAD,CAAM5L,UAAU,iBACZ,kBAAC6L,GAAA,EAAD,CACIC,OAAU,kBAACC,GAAA,EAAD,CAAQ5L,aAAW,UAAnB,OACV6L,MAAO5K,KAAKxC,MAAMqN,KAAK1G,KAAK2G,cAC5BC,UAAW7L,EAAU8L,WAAWhL,KAAKxC,MAAMqN,KAAKxL,MAAM,KAE1D,kBAAC4L,GAAA,EAAD,KACKjL,KAAKxC,MAAMqN,KAAKK,SAGrB,kBAACC,GAAA,EAAD,CAAaC,gBAAc,GACvB,kBAACvM,EAAA,EAAD,CAAYE,aAAW,QACnB,kBAAC,KAAD,OAGJ,kBAACF,EAAA,EAAD,CAAYE,aAAW,UACnB,kBAAC,KAAD,c,GAxBe+H,c,SD/C/BwD,O,mBAAAA,I,sBAAAA,Q,SEUA9B,GFLS6C,GAUjB,WAAYlH,EAAY9E,EAAY6L,GAAqE,IAApDrB,EAAmD,uDAAtBS,GAAeD,OAAO,yBATxG1L,GAAa,GAS2F,KARxGwF,UAQwG,OAPxG9E,UAOwG,OANxG6L,aAMwG,OALxG5C,aAKwG,OAJxGuB,gBAIwG,OAFxG/F,WAEwG,EACpG9D,KAAKmE,KAAOA,EACZnE,KAAK8D,MAAQK,EAAKxF,GAClBqB,KAAKX,KAAOA,EACZW,KAAKkL,QAAUA,EACflL,KAAK6J,WAAaA,EAElB7J,KAAKsI,QAAU,IAAI1E,OGKN0H,G,YACjB,WAAY9N,GAAc,IAAD,sBACrB,4CAAMA,IAEN,IAAM2G,EAAa,IAAId,GAAK,2BAA4B,YAAahB,EAAO2F,KAAM,IAAIhH,KAAK,KAAM,EAAG,IAAK,gBAHpF,OAIrB,EAAK5D,MAAQ,CACT+G,KAAMA,EACNoH,MAAO,CACH,IAAIF,GAAKlH,EAAM,IAAInD,KAAQ,cAAesJ,GAAeD,QACzD,IAAIgB,GAAKlH,EAAM,IAAInD,KAAQ,6BAA8BsJ,GAAeD,QACxE,IAAIgB,GAAKlH,EAAM,IAAInD,KAAQ,6CAA2CsJ,GAAekB,WATxE,E,sEAerBC,QAAQC,IAAI1L,KAAK5C,MAAMmO,OACvB,IAAMA,EAAUvL,KAAK5C,MAAMmO,MAAMrH,KAAI,SAAC2G,EAAM/L,GAAP,OACjB,kBAAC,GAAD,CAAe+L,KAAQA,OAG3C,OACI,yBAAKjM,UAAU,qBACX,kBAAC2K,GAAD,MAECgC,O,GAzBiBzE,a,OCZnB,SAAS6E,KACpB,OACI,oDCfO,SAASC,KACpB,OACI,wBAAIC,MAAO,CAACC,UAAU,WAAtB,iBACkB,6BACd,kBAAC,IAAD,CAAMC,GAAG,KAAT,iB,SHIAvD,K,eAAAA,E,aAAAA,E,oBAAAA,Q,YIJZwD,IAASC,OAAO,mBJUD,WACX,OACI,kBAAC,IAAD,CAAU/O,MAAOA,GACb,kBAAC,IAAD,CAAegP,SAAUC,kBACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnE,KACjC,kBAAC,IAAD,CAAOiE,KAAM5D,GAAe1L,MAAOwP,UAAWnE,KAC9C,kBAAC,IAAD,CAAOiE,KAAM5D,GAAeC,KAAM6D,UAAWhB,KAC7C,kBAAC,IAAD,CAAOc,KAAM5D,GAAe+D,QAASD,UAAWX,KAChD,kBAAC,IAAD,CAAOW,UAAWV,UInBtB,MAAWY,SAASC,eAAe,U,wCCRnDC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c2f116dc.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { IAction } from \".\";\nimport User from \"../Model/User\";\n\nexport enum ACTIONS {\n    LOGIN,\n    LOGOFF\n}\n\nexport function login(userAuthenticated: User): IAction {\n    return {\n        type: ACTIONS.LOGIN,\n        userAuthenticated: userAuthenticated\n    }\n}\n\nexport function logoff(): IAction {\n    return{\n        type: ACTIONS.LOGOFF\n    }\n}","import { createStore } from 'redux';\nimport { ACTIONS } from './actions';\n\nimport User from '../Model/User';\n\nexport interface IStore {\n    userAuthenticated?: User\n}\n\nexport interface IAction extends IStore{\n    type: string | number;\n}\n\nconst INITIAL_STATE: IStore = {\n    userAuthenticated: undefined\n}\n\nfunction reducer(state: any = INITIAL_STATE, action: IAction){\n    switch(action.type){\n        case (ACTIONS.LOGIN):{\n            return {\n                ...state,\n                userAuthenticated: action.userAuthenticated\n            }}\n        case (ACTIONS.LOGOFF):{\n            return{\n                ...state,\n                userAuthenticated: undefined\n            }\n        }\n\n        default:\n            return state;\n    }\n    \n    if (action.type === ACTIONS.LOGIN){\n        return {\n            ...state,\n            userAuthenticated: action.userAuthenticated\n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducer);\n\nexport default store;","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\n\n\n\n\n// Components\n\n// Model\n\n// Services\n\n// Icons\n\n// Enums\nexport enum VARIANT {\n    WARNING = 'warning',\n    SUCCESS = 'success',\n    ERROR = 'error',\n    INFO = 'info'\n}\n\ninterface IProps {\n    text: string;\n    handleClose?: () => void;\n    variant: VARIANT;\n    show: boolean;\n}\n\nexport default function CustomSnackBar(props: IProps){\n    const { text, handleClose, variant, show } = props;\n\n    let icon;\n    switch(variant){\n        case VARIANT.WARNING:\n            icon = <WarningIcon/>;  break;\n        case VARIANT.SUCCESS:\n            icon = <CheckCircleIcon/>;  break;\n        case VARIANT.ERROR:\n            icon = <ErrorIcon/>;  break;\n        case VARIANT.INFO:\n            icon = <InfoIcon/>;  break;\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={show}\n            autoHideDuration={8000}\n            onClose={handleClose}\n            ContentProps={{\n                'aria-describedby': 'message-id',\n            }}\n            message={   <span id=\"message-id\" className='message'>\n                            {icon}\n                            {text}\n                        </span>}\n            action={[\n                /*<Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n                    UNDO\n                </Button>,*/\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    className='close'\n                    onClick={handleClose}>\n                <CloseIcon />\n                </IconButton>,\n            ]}\n            className={'SnackBar ' + variant} \n            />\n    );\n}","export class Utilities{\n    \n    static validateEmail(email: string): boolean {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    static formatDate(date: Date, displayHour: boolean = false): string{\n        const year = date.getFullYear();\n        const month = Utilities.completeLeadingZeros((date.getMonth() + 1).toString(), 2); //Mês começa com 0 = Janeiro\n        const day = Utilities.completeLeadingZeros(date.getDate().toString(), 2);\n        let displayedHour = '';\n        \n        if (displayHour)\n            displayedHour = ' ' + this.formatHour(date);\n\n        return day + '/' + month + '/' + year + displayedHour;\n    }\n    \n    static formatHour(date: Date, displaySeconds: boolean = false): string{\n        const hour = Utilities.completeLeadingZeros(date.getHours().toString(), 2);\n        const minutes = Utilities.completeLeadingZeros(date.getMinutes().toString(), 2);\n        const seconds = displaySeconds ? ':' + Utilities.completeLeadingZeros(date.getSeconds().toString(), 2) : '';\n        return hour + ':' + minutes + seconds;\n    }\n\n    private static getMidnightTime(date: Date): Date {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n\n        return date;\n    }\n\n    static translateDateToText(date: Date): string {\n        let originalDate: Date = date;\n        if (this.getMidnightTime(date).valueOf() === this.getMidnightTime(new Date()).valueOf() )\n            return 'Today at ' + this.formatHour(originalDate); // Today\n        else\n            return '';\n    }\n\n    static completeLeadingZeros(value: string, numZero: number): string {\n        let zeros = '';\n        for (let iCount = 0; iCount < numZero; iCount++)    zeros = '0' + zeros;\n        return (zeros + value).slice(-numZero);\n    }\n}","export default class ConfidentialInfo {\n    public static firebaseConfig = {\n        apiKey: \"AIzaSyDS1v5erkI8ArkEpO_NoEDRv4wcDDLIu5I\",\n        authDomain: \"socialnetwork-d9478.firebaseapp.com\",\n        databaseURL: \"https://socialnetwork-d9478.firebaseio.com\",\n        projectId: \"socialnetwork-d9478\",\n        storageBucket: \"socialnetwork-d9478.appspot.com\",\n        messagingSenderId: \"1077042299179\",\n        appId: \"1:1077042299179:web:4048574ca3f2bcffa4456e\"\n    };\n}","import firebase from 'firebase';\nimport ConfidentialInfo from './ConfidentialInfo';\n\nexport function initializeFirebase(){\n    for (let iCount = 0; iCount < firebase.apps.length; iCount++){\n        if (firebase.apps[iCount].name == '[DEFAULT]')\n            return;\n    }\n    firebase.initializeApp(ConfidentialInfo.firebaseConfig);\n}\n\nexport const firebaseApp = firebase;","export enum Gender{\n    MALE,\n    FEMALE,\n    NOT_INFORM\n}\n\nexport default class User{\n    id: string = '';\n    email: string;\n    firstName: string;\n    lastName: string;\n    gender: Gender;\n    birthday?: Date;\n    friends: Array<User>;\n\n    _friends: Array<string>;\n\n    constructor(email: string, firstName: string, gender: Gender, birthday?: Date,  lastName: string = ''){\n        this.email = email;\n        this.firstName = firstName;\n        this.gender = gender;\n        \n        this.birthday = birthday;\n        this.lastName = lastName;\n        \n        this.friends = new Array<User>();\n        this._friends = new Array<string>();\n    }\n\n    getFullName(): string{\n        return this.firstName + ' ' + this.lastName;\n    }\n\n    getUpdatable(){\n        return {\n            'id': this.id,\n            'email': this.email,\n            'firstName': this.firstName,\n            'lastName': this.lastName,\n            'gender': this.gender,\n            'birthday': this.birthday != undefined ? this.birthday.getTime() : null,\n            'friends': this._friends\n        }\n    }\n\n    static getUser(_user: any): User {\n        let id: string = _user.id;\n        let email: string = _user.email;\n        let firstName: string = _user.firstName;\n        let lastName: string = _user.lastName;\n        let gender: Gender = _user.gender;\n        let birthday: Date | undefined = _user.birthday ? new Date(_user.birthday) : undefined;\n        let friends: Array<string> = _user.friends ? Object.keys(_user.requests).map(iCount => _user.friends[iCount]) : new Array<string>();\n\n        let user: User = new User(email, firstName, gender, birthday, lastName);\n        user.id = id;\n        user._friends = friends;\n\n        return user;\n    }\n}","import {firebaseApp} from './Firebase';\nimport {initializeFirebase} from './Firebase';\n\nexport class FirebaseAuth {\n\n    static createUser(email: string, password: string): Promise<firebase.auth.UserCredential> {\n        initializeFirebase();\n    \n        return new Promise((resolve, reject) => {\n            firebaseApp.auth().createUserWithEmailAndPassword(email, password).then((info) => {\n                resolve(info);\n            }).catch((error) => {\n                reject(error);\n            });\n        });\n    }\n    \n    static loginUser(email: string, password: string): Promise<firebase.auth.UserCredential> {\n        initializeFirebase();\n    \n        return new Promise((resolve, reject) => {\n            firebaseApp.auth().signInWithEmailAndPassword(email, password).then((info) => {\n                resolve(info);\n            }).catch((error) => {\n                reject(error);\n            });\n        });\n    }\n    \n    static async resetPassword(email: string): Promise<void> {\n        initializeFirebase();\n\n        await firebaseApp.auth().sendPasswordResetEmail(email);\n    }\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport '../../Pages/Login/styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Components\nimport CustomSnackBar, {VARIANT} from '../CustomSnackBar';\n\n// Model\nimport User, { Gender } from '../../Model/User';\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\nimport {FirebaseAuth} from '../../Services/Firebase/FirebaseAuth';\nimport {UserDB} from '../../Services/Firebase/Database/UserDB';\n\n// Icons\n\n\n// Enums\nenum FIELD {\n    EMAIL,\n    FIRSTNAME,\n    LASTNAME,\n    PASSWORD,\n    SEX,\n    BIRHTDAY\n}\n\n// Interfaces\ninterface IProps {\n    dispatch: any,\n    userAuthenticated?: User\n}\n\ninterface IState {\n    submitted: boolean,\n    email: string,\n    password: string,\n    showSnackBar: boolean,\n    snackBarText: string\n}\n\nclass LoginComponent extends Component<IProps, IState>{\n    errorMessages: Map<number, string> = new Map<number, string>();\n    \n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            submitted: false,\n            email: '',\n            password: '',\n            showSnackBar: false,\n            snackBarText: ''\n        };\n\n        // Initializing map\n        for (let field in FIELD)\n            this.errorMessages.set(parseInt(field), '');\n    }\n    \n    // Functions and consts\n    displayError = (field: FIELD): boolean => {\n        return this.displayHelperText(field).length > 0;\n    }\n\n    setHelpersText = (): void => {\n        const {email, password} = this.state;\n\n        let message: string = '';\n\n        // Email\n        message = '';\n        if (!Utilities.validateEmail(email))\n            message =  'Email address is not valid';\n        this.errorMessages.set(FIELD.EMAIL, message);\n\n        // Password\n        message = '';\n        if (password.length === 0)\n            message =  'Password is required';\n        this.errorMessages.set(FIELD.PASSWORD, message);\n    }\n\n    displayHelperText = (field: FIELD): string => {\n        if (this.state.submitted)\n            return this.errorMessages.get(field) as string;\n        else\n            return '';\n    }\n    \n    handleRegister = async () => {\n        this.setState({submitted: true});\n\n        let error: boolean = false;\n        this.errorMessages.forEach((value: string, key: number) => {\n            if (!error)\n                error = value.length > 0;\n        });\n\n        if (!error){\n            const {email, password} = this.state;\n            FirebaseAuth.loginUser(email, password).then((info) => {\n                UserDB.getUser(info.user!.uid).then((user) => {\n                    this.props.dispatch(Actions.login(user));\n                });\n            }).catch(async (error) => {\n                await this.setState({snackBarText: error.message})\n                this.setState({showSnackBar: true});\n            });\n        }\n    }\n    \n    handleClose = () => this.setState({showSnackBar: false});\n\n    render(){   \n        const {email, password, showSnackBar, snackBarText} = this.state;\n        \n        this.setHelpersText();\n        return(\n            <div className=\"componentContainer componentLoginContainer\">\n                <div className=\"componentWelcome\">\n                    Good to see you again. Welcome!\n                </div>\n\n                <CustomSnackBar\n                    variant = {VARIANT.ERROR}\n                    handleClose={this.handleClose}\n                    show={showSnackBar}\n                    text={snackBarText}/>\n\n                <form className=\"componentForm componentLoginForm\">\n                    <TextField\n                        required\n                        error = {this.displayError(FIELD.EMAIL)}\n                        value={email}\n                        onChange = {newValue => this.setState({email: newValue.target.value}) }\n                        id=\"email\"\n                        label=\"E-mail\"\n                        helperText = {this.displayHelperText(FIELD.EMAIL)}\n                        variant=\"outlined\"/>\n\n                    <TextField \n                        required\n                        error = {this.displayError(FIELD.PASSWORD)}\n                        value={password}\n                        onChange = {newValue => this.setState({password: newValue.target.value})}\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        helperText = {this.displayHelperText(FIELD.PASSWORD)}\n                        variant=\"outlined\"/>\n\n                </form>\n\n                <div className=\"formSubmit\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submitButton'\n                        onClick = {this.handleRegister}>\n                        Login\n                    </Button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default connect((state: IStore) => ({\n    userAuthenticated: state.userAuthenticated}) ) (LoginComponent)","import {firebaseApp, initializeFirebase} from '../Firebase';\n\nimport User from '../../../Model/User';\nimport { resolve } from 'dns';\n\nexport class UserDB {\n    static async createUser(user: User): Promise<void> {\n        initializeFirebase();\n\n        await firebaseApp.database().ref('users/' + user.id).update(user.getUpdatable());\n    }\n\n    static getUser(userID: string): Promise<User> {\n        initializeFirebase();\n\n        return new Promise((resolve, reject) => {\n            firebaseApp.database().ref('users/' + userID).once('value', (dataSnapshot) => {\n                const user: User = User.getUser(dataSnapshot.exportVal());\n                resolve(user);\n            });\n        })\n    }\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport '../../Pages/Login/styles.css'\nimport profilePicture from '../../Resources/ProfilePicture.png';\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\nimport CustomSnackBar, {VARIANT} from '../CustomSnackBar';\n\n// Model\nimport User, {Gender} from '../../Model/User';\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\nimport {FirebaseAuth} from '../../Services/Firebase/FirebaseAuth';\nimport {UserDB} from '../../Services/Firebase/Database/UserDB';\n\n// Icons\n\n// Enums\nenum FIELD {\n    EMAIL,\n    FIRSTNAME,\n    LASTNAME,\n    PASSWORD,\n    SEX,\n    BIRHTDAY\n}\n\n// Interfaces\ninterface IProps {\n    dispatch: any,\n    userAuthenticated?: User\n}\n\ninterface IState {\n    submitted: boolean,\n    email: string,\n    firstName: string,\n    lastName: string,\n    password: string,\n    sex: Gender,\n    birthday?: Date,\n    showSnackBar: boolean,\n    snackBarText: string\n}\n\nclass RegisterComponent extends Component<IProps, IState>{\n    errorMessages: Map<number, string> = new Map<number, string>();\n\n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            submitted: false,\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            sex: Gender.NOT_INFORM,\n            birthday: undefined,\n            showSnackBar: false,\n            snackBarText: ''\n        }\n\n        // Initializing map\n        for (let field in FIELD)\n            this.errorMessages.set(parseInt(field), '');\n    }\n\n    // Functions and consts\n    displayError = (field: FIELD): boolean => {\n        return this.displayHelperText(field).length > 0;\n    }\n\n    setHelpersText = (): void => {\n        const {email, password, firstName} = this.state;\n\n        let message: string = '';\n\n        // Email\n        message = '';\n        if (!Utilities.validateEmail(email))\n            message =  'Email address is not valid';\n        this.errorMessages.set(FIELD.EMAIL, message);\n\n        // FirstName\n        message = '';\n        if (firstName.length === 0)\n            message =  'First Name Required';;\n        this.errorMessages.set(FIELD.FIRSTNAME, message);\n        \n        // Password\n        message = '';\n        if (password.length === 0)\n            message =  'Password is required';\n        this.errorMessages.set(FIELD.PASSWORD, message);\n    }\n\n    displayHelperText = (field: FIELD): string => {\n        if (this.state.submitted)\n            return this.errorMessages.get(field) as string;\n        else\n            return '';\n    }\n    \n    handleRegister = async () => {\n        this.setState({submitted: true});\n\n        let error: boolean = false;\n        this.errorMessages.forEach((value: string, key: number) => {\n            if (!error)\n                error = value.length > 0;\n        });\n\n        if (!error){\n            const {email, password, firstName, lastName, sex, birthday} = this.state;\n            let user: User = new User(email, firstName, sex, birthday, lastName);\n\n            FirebaseAuth.createUser(email, password).then(async (info) => {\n                user.id = info.user!.uid;\n                await UserDB.createUser(user);\n                this.props.dispatch(Actions.login(user));\n            }).catch( async (error) => {\n                await this.setState({snackBarText: error.message})\n                this.setState({showSnackBar: true});\n            });\n        }\n    }\n\n    handleClose = () => this.setState({showSnackBar: false});\n\n    render(){\n        const {email, password, firstName, lastName, sex, birthday, showSnackBar, snackBarText} = this.state;\n\n        this.setHelpersText();\n        return(\n            <div className=\"componentContainer\">\n                <div className=\"componentWelcome\">\n                    Welcome to mine, yours, our Social Network!\n                </div>\n    \n                <CustomSnackBar\n                    variant = {VARIANT.ERROR}\n                    handleClose={this.handleClose}\n                    show={showSnackBar}\n                    text={snackBarText}/>\n\n                <form className='componentForm'>\n                        <TextField\n                            required\n                            error = {this.displayError(FIELD.EMAIL)}\n                            value={email}\n                            onChange = {newValue => this.setState({email: newValue.target.value}) }\n                            id=\"email\"\n                            label=\"E-mail\"\n                            helperText = {this.displayHelperText(FIELD.EMAIL)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            required\n                            error = {this.displayError(FIELD.PASSWORD)}\n                            value={password}\n                            onChange = {newValue => this.setState({password: newValue.target.value}) }\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            helperText = {this.displayHelperText(FIELD.PASSWORD)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            required\n                            error = {this.displayError(FIELD.FIRSTNAME)}\n                            value={firstName}\n                            onChange = {newValue => this.setState({firstName: newValue.target.value}) }\n                            id=\"firstName\"\n                            label=\"First name\"\n                            helperText = {this.displayHelperText(FIELD.FIRSTNAME)}\n                            variant=\"outlined\"/>\n    \n                        <TextField \n                            id=\"lastName\"\n                            value={lastName}\n                            onChange = {newValue => this.setState({lastName: newValue.target.value}) }\n                            error = {this.displayError(FIELD.LASTNAME)}\n                            label=\"Last name\"\n                            helperText = {this.displayHelperText(FIELD.LASTNAME)}\n                            variant=\"outlined\"/>\n    \n                        <TextField\n                            id=\"date\"\n                            label=\"Date of birth\"\n                            type=\"date\"\n                            value={birthday}\n                            onChange = {newValue => {\n                                let newDate: Date | null;\n                                newDate = new Date(newValue.target.value);\n                                if (newDate.getFullYear() > 1000)\n                                    this.setState({birthday: newDate})\n                            }}\n                            className = 'inputDate'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            />\n    \n                        <FormControl\n                            variant=\"outlined\"\n                            error={this.displayError(FIELD.SEX)}>\n                            <InputLabel id=\"demo-simple-select-error-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-error-label\"\n                                id=\"demo-simple-select-error\"\n                                value={sex}\n                                onChange={newValue => this.setState({sex: newValue.target.value as Gender})}\n                                >\n                                <MenuItem value={Gender.MALE}>Male</MenuItem>\n                                <MenuItem value={Gender.FEMALE}>Female</MenuItem>\n                                <MenuItem value={Gender.NOT_INFORM}>Not informed</MenuItem>\n                            </Select>\n                            <FormHelperText>{this.displayHelperText(FIELD.SEX)}</FormHelperText>\n                        </FormControl>\n    \n                </form>\n    \n                <div className = 'formSubmit'>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submitButton'\n                        onClick = {this.handleRegister}>\n                        Register\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default connect((state: IStore) => ({\n    userAuthenticated: state.userAuthenticated}) ) (RegisterComponent)","// React Imports\nimport React, { Component } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom'\nimport {PossibleRoutes} from '../../Routes';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as Actions from '../../Store/actions';\nimport store, { IStore } from '../../Store/index';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// Components\nimport LoginComponent from '../../Components/LoginComponent';\nimport RegisterComponent from '../../Components/RegisterComponent';\n\n// Model\nimport User from '../../Model/User';\n\n// Services\n\n// Icons\n\n// Enums\nenum TABS {\n    Login,\n    Register\n}\n\n// Interfaces\ninterface IProps {\n    userAuthenticated?: User,\n    dispatch: any,\n    history: any\n}\n\ninterface IState {\n    selectedTab: TABS\n}\n\nclass Login extends Component<IProps, IState>{\n    constructor(props: IProps){\n        super(props);\n\n        this.state = {\n            selectedTab: TABS.Login\n        };\n\n        store.subscribe(this.authenticationCanBeChanged);\n    }\n\n    authenticationCanBeChanged = () => {\n        if ((store.getState() as IStore).userAuthenticated !== undefined)\n            this.props.history.push(PossibleRoutes.HOME);\n    }\n\n    setSelectedTab(newValue: TABS){\n        this.setState({selectedTab: newValue});\n    }\n    \n    renderActiveTab(){\n        switch (this.state.selectedTab) {\n            case TABS.Login:\n                return <LoginComponent/>\n            case TABS.Register:\n                return <RegisterComponent/>\n            default:\n                return <h1>Falha no sistema</h1>\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"login-container\">\n                {this.renderActiveTab()}\n\n                <Paper square className='bottomTabs'>\n                    <Tabs\n                    value={this.state.selectedTab}\n                    onChange={(event, value) => this.setSelectedTab(value) }\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    aria-label=\"icon label tabs example\">\n                        <Tab value = {TABS.Login}    label=\"Login\" />\n                        <Tab value = {TABS.Register} label=\"Create account\" />\n                    </Tabs>\n                </Paper>\n\n        </div>\n        );\n    }\n}\n\nexport default Login;","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\n\nexport default function CreatePost(){\n    // Enums\n    enum VISIBILITY {\n        FRIENDS = 'Friends',\n        PUBLIC = 'Public'\n    }\n\n    enum FIELD {\n        POST_CONTENT\n    }\n\n    // State\n    const [submitted, setSubmitted] = React.useState(false);\n    const [visibility, setVisibility] = React.useState(VISIBILITY.FRIENDS);\n    const [postContent, setPostContent] = React.useState('');\n\n    // Functions and consts\n    const displayError = (field: FIELD): boolean => {\n        return displayHelperText(field).length > 0;\n    }\n\n    const displayHelperText = (field: FIELD): string => {\n        if (!submitted)\n            return '';\n\n        switch (field){\n            case FIELD.POST_CONTENT:\n                if (postContent.length === 0)\n                    return 'Post content required';\n                else\n                    return '';\n\n            default:\n                return '';\n        }\n    }\n\n    async function handlePost(){\n        setSubmitted(true);\n    }\n\n    return(\n        <div className=\"createPostContainer\">\n\n            <div className=\"contentArea\">\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"What's going on?\"\n                    multiline\n                    rows=\"4\"\n                    value={postContent}\n                    onChange = {newValue => setPostContent(newValue.target.value)}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    error = {displayError(FIELD.POST_CONTENT)}\n                    helperText = {displayHelperText(FIELD.POST_CONTENT)}\n                    />\n            </div>\n\n            <div className=\"bottomButtons\">\n                <FormControl \n                    variant=\"outlined\"\n                    className = 'formChooseVisibility'>\n                    <Select\n                        labelId=\"demo-simple-select-error-label\"\n                        id=\"demo-simple-select-error\"\n                        value={visibility}\n                        onChange={newValue => setVisibility(newValue.target.value as VISIBILITY)}\n                        >\n                        <MenuItem value={VISIBILITY.FRIENDS}>{VISIBILITY.FRIENDS}</MenuItem>\n                        <MenuItem value={VISIBILITY.PUBLIC}>{VISIBILITY.PUBLIC}</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {handlePost}\n                    className = 'formSubmit'>\n                    Post\n                </Button>\n            </div>\n        </div>\n    );\n}","import User from './User';\n\nexport enum PostVisibility{\n    PUBLIC,\n    PRIVATE\n}\n\nexport default class Post {\n    id: string = '';\n    user: User;\n    date: Date;\n    content: string;\n    history: Array<Post>;\n    visibility: PostVisibility;\n\n    _user: string;\n\n    constructor(user: User, date: Date, content: string, visibility: PostVisibility = PostVisibility.PUBLIC){\n        this.user = user;\n        this._user = user.id;\n        this.date = date;\n        this.content = content;\n        this.visibility = visibility;\n\n        this.history = new Array<Post>();\n    }\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Post from '../../Model/Post';\n\ninterface Props {\n    post: Post\n}\n\ninterface State {\n\n}\n\nexport default class PostComponent extends Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div className=\"postContainer\">\n                <Card className='cardContainer'>\n                    <CardHeader\n                        avatar = {<Avatar aria-label=\"recipe\"> C </Avatar>}\n                        title={this.props.post.user.getFullName()}\n                        subheader={Utilities.formatDate(this.props.post.date, true)}/>\n                    \n                    <CardContent>\n                        {this.props.post.content}\n                    </CardContent>\n\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"edit\">\n                            <EditIcon />\n                        </IconButton>\n                        \n                        <IconButton aria-label=\"delete\">\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </CardActions>\n\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login from './Pages/Login';\nimport Home from './Pages/Home';\nimport Profile from './Pages/Profile';\nimport NotFound from './Pages/NotFound';\n\nexport enum PossibleRoutes{\n    LOGIN = '/login',\n    HOME = '/home',\n    PROFILE = '/profile'\n}\n\nexport default function Routes(){\n    return(\n        <Provider store={store} >\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path='/' exact component={Login}/>\n                    <Route path={PossibleRoutes.LOGIN} component={Login}/>\n                    <Route path={PossibleRoutes.HOME} component={Home}/>\n                    <Route path={PossibleRoutes.PROFILE} component={Profile}/>\n                    <Route component={NotFound}/>\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    )\n}","// React Imports\nimport React, {Component} from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\n\n// Components\nimport CreatePost from '../../Components/CreatePost';\nimport PostComponent from '../../Components/PostComponent';\n\n// Model\nimport Post, { PostVisibility } from '../../Model/Post';\nimport User, { Gender } from '../../Model/User';\n\n// Services\n\n// Icons\n\ninterface Props {\n\n}\n\ninterface State {\n    user: User,\n    posts: Array<Post>\n}\n\nexport default class Home extends Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n\n        const user: User = new User('claudineibjr@hotmail.com', 'Claudinei', Gender.MALE, new Date(1996, 9, 27), 'Brito Junior')\n        this.state = {\n            user: user,\n            posts: [\n                new Post(user, new Date(), 'Hello World', PostVisibility.PUBLIC),\n                new Post(user, new Date(), 'Hoje estou estudando React', PostVisibility.PUBLIC),\n                new Post(user, new Date(), 'Isso aqui ninguém deveria ficar sabendo', PostVisibility.PRIVATE),\n            ]\n        }\n    }\n\n    render(){\n        console.log(this.state.posts);\n        const posts =   this.state.posts.map((post, key) => \n                            <PostComponent post = {post}/>\n                        );\n\n        return(\n            <div className=\"homePageContainer\">\n                <CreatePost/>\n                \n                {posts}\n            </div>\n        );\n    }\n}","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\n\n// Components\n\n// Model\n\n// Services\n\n// Icons\n\n\nexport default function Profile(){\n    return (\n        <h1>Hello World! Profile</h1>\n    );\n}","// React Imports\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default function NotFound(){\n    return (\n        <h1 style={{textAlign:\"center\"}}>\n            Page not Found<br/>\n            <Link to=\"/\">Go to Home </Link>\n        </h1>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/old/App';\nimport Routes from './Routes';\n\nimport './Styles/general.css';\n\nReactDOM.render(<Routes/>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}