{"version":3,"sources":["Pages/old/logo.svg","Pages/old/App.js","Services/Utilities.ts","Components/LoginComponent/index.tsx","Components/RegisterComponent/index.tsx","index.js","Pages/Login/index.tsx"],"names":["module","exports","App","Utilities","email","test","date","year","getFullYear","month","completeLeadingZeros","getMonth","toString","getDate","value","numZero","zeros","iCount","slice","LoginComponent","FIELD","React","useState","submitted","setSubmitted","setEmail","password","setPassword","displayError","field","displayHelperText","length","EMAIL","validateEmail","PASSWORD","a","className","TextField","required","error","onChange","newValue","target","id","label","helperText","variant","type","Button","color","onClick","RegisterComponent","SEX","firstName","setFirstName","lastName","setLastName","sex","setSex","Date","birthday","setBirthday","FIRSTNAME","NONE","LASTNAME","newDate","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","MenuItem","MALE","FEMALE","NOT_INFORM","FormHelperText","ReactDOM","render","TABS","Login","selectedTab","setSelectedTab","Register","renderActiveTab","Paper","square","Tabs","event","indicatorColor","textColor","centered","aria-label","Tab","document","getElementById"],"mappings":"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","file":"static/js/main.1a2e8fcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export class Utilities{\n    \n    static validateEmail(email: string): boolean {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    static formatDate(date: Date): string{\n        let year = date.getFullYear();\n        let month = Utilities.completeLeadingZeros((date.getMonth() + 1).toString(), 2); //Mês começa com 0 = Janeiro\n        let day = Utilities.completeLeadingZeros(date.getDate().toString(), 2);\n        return day + '/' + month + '/' + year;        \n    }\n\n    static completeLeadingZeros(value: string, numZero: number): string {\n        let zeros = '';\n        for (let iCount = 0; iCount < numZero; iCount++)    zeros = '0' + zeros;\n        return (zeros + value).slice(-numZero);\n    }\n}","// React Imports\nimport React from 'react';\n\n// Styles\nimport '../../Pages/Login/styles.css'\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\n\nexport default function LoginComponent(){\n    // Enums\n    enum FIELD {\n        EMAIL,\n        FIRSTNAME,\n        LASTNAME,\n        PASSWORD,\n        SEX,\n        BIRHTDAY\n    }\n\n    // State\n    const [submitted, setSubmitted] = React.useState(false);\n    \n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    // Functions and consts\n    const displayError = (field: FIELD): boolean => {\n        return displayHelperText(field).length > 0;\n    }\n\n    const displayHelperText = (field: FIELD): string => {\n        if (!submitted)\n            return '';\n\n        switch (field){\n            case FIELD.EMAIL:\n                if (!Utilities.validateEmail(email))\n                    return 'Email address is not valid';\n                else\n                    return '';\n\n            case FIELD.PASSWORD:\n                if (password.length === 0)\n                    return 'Password is required';\n                else\n                    return '';\n\n            default:\n                return '';\n        }\n    }    \n    \n    async function handleRegister () {\n        setSubmitted(true);\n    }\n    \n    return(\n        <div className=\"componentContainer componentLoginContainer\">\n            <div className=\"componentWelcome\">\n                Good to see you again. Welcome!\n            </div>\n\n            <form className=\"componentForm componentLoginForm\">\n                <TextField\n                    required\n                    error = {displayError(FIELD.EMAIL)}\n                    value={email}\n                    onChange = {newValue => setEmail(newValue.target.value)}\n                    id=\"email\"\n                    label=\"E-mail\"\n                    helperText = {displayHelperText(FIELD.EMAIL)}\n                    variant=\"outlined\"/>\n\n                <TextField \n                    required\n                    error = {displayError(FIELD.PASSWORD)}\n                    value={password}\n                    onChange = {newValue => setPassword(newValue.target.value)}\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    helperText = {displayHelperText(FIELD.PASSWORD)}\n                    variant=\"outlined\"/>\n\n            </form>\n\n            <div className=\"formSubmit\">\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className='submitButton'\n                    onClick = {handleRegister}>\n                    Login\n                </Button>\n            </div>\n\n        </div>\n    );\n}","// React Imports\nimport React from 'react';\n\n// Styles\nimport '../../Pages/Login/styles.css'\nimport profilePicture from '../../Resources/ProfilePicture.png';\n\n// Material-UI Components\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// Components\n\n// Model\n\n// Services\nimport {Utilities} from '../../Services/Utilities';\n\n// Icons\n\nexport default function RegisterComponent(){\n    // Enums\n    enum FIELD {\n        EMAIL,\n        FIRSTNAME,\n        LASTNAME,\n        PASSWORD,\n        SEX,\n        BIRHTDAY\n    }\n    \n    enum SEX{\n        NONE = '',\n        MALE = 'Male',\n        FEMALE = 'Female',\n        NOT_INFORM = 'I prefer not to inform'\n    }\n    \n    // State\n    const [submitted, setSubmitted] = React.useState(false);\n    \n    const [email, setEmail] = React.useState('');\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [sex, setSex] = React.useState('');\n    const [birthday, setBirthday] = React.useState<Date | null>(new Date());\n\n    // Functions and consts\n    const displayError = (field: FIELD): boolean => {\n        return displayHelperText(field).length > 0;\n    }\n\n    const displayHelperText = (field: FIELD): string => {\n        if (!submitted)\n            return '';\n\n        switch (field){\n            case FIELD.EMAIL:\n                if (!Utilities.validateEmail(email))\n                    return 'Email address is not valid';\n                else\n                    return '';\n\n            case FIELD.FIRSTNAME:\n                if (firstName.length === 0)\n                    return 'First Name Required';\n                else\n                    return ''\n\n            case FIELD.PASSWORD:\n                if (password.length === 0)\n                    return 'Password is required';\n                else\n                    return '';\n\n            case FIELD.SEX:\n                if (sex === SEX.NONE)\n                    return 'Sex is required';\n                else\n                    return '';\n\n            default:\n                return '';\n        }\n    }\n    \n    async function handleRegister () {\n        setSubmitted(true);\n    }\n\n    return(\n        <div className=\"componentContainer\">\n            <div className=\"componentWelcome\">\n                Welcome to mine, yours, our Social Network!\n            </div>\n\n            <form className='componentForm'>\n                    <TextField\n                        required\n                        error = {displayError(FIELD.EMAIL)}\n                        value={email}\n                        onChange = {newValue => setEmail(newValue.target.value)}\n                        id=\"email\"\n                        label=\"E-mail\"\n                        helperText = {displayHelperText(FIELD.EMAIL)}\n                        variant=\"outlined\"/>\n\n                    <TextField \n                        required\n                        error = {displayError(FIELD.FIRSTNAME)}\n                        value={firstName}\n                        onChange = {newValue => setFirstName(newValue.target.value)}\n                        id=\"firstName\"\n                        label=\"First name\"\n                        helperText = {displayHelperText(FIELD.FIRSTNAME)}\n                        variant=\"outlined\"/>\n\n                    <TextField \n                        id=\"lastName\"\n                        value={lastName}\n                        onChange = {newValue => setLastName(newValue.target.value)}\n                        error = {displayError(FIELD.LASTNAME)}\n                        label=\"Last name\"\n                        helperText = {displayHelperText(FIELD.LASTNAME)}\n                        variant=\"outlined\"/>\n                \n                    <TextField \n                        required\n                        error = {displayError(FIELD.PASSWORD)}\n                        value={password}\n                        onChange = {newValue => setPassword(newValue.target.value)}\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        helperText = {displayHelperText(FIELD.PASSWORD)}\n                        variant=\"outlined\"/>\n\n                    <TextField\n                        id=\"date\"\n                        label=\"Date of birth\"\n                        type=\"date\"\n                        value={birthday}\n                        onChange = {newValue => {let newDate: Date | null; newDate = new Date(newValue.target.value); if (newDate.getFullYear() > 1000) setBirthday(newDate)}}\n                        className = 'inputDate'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        />\n\n                    <FormControl\n                        variant=\"outlined\"\n                        error={displayError(FIELD.SEX)}>\n                        <InputLabel id=\"demo-simple-select-error-label\">Gender</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-error-label\"\n                            id=\"demo-simple-select-error\"\n                            value={sex}\n                            onChange={newValue => setSex(newValue.target.value as string)}\n                            >\n                            <MenuItem value={SEX.NONE}>\n                                <em>None</em>\n                            </MenuItem>\n                            <MenuItem value={SEX.MALE}>{SEX.MALE}</MenuItem>\n                            <MenuItem value={SEX.FEMALE}>{SEX.FEMALE}</MenuItem>\n                            <MenuItem value={SEX.NOT_INFORM}>{SEX.NOT_INFORM}</MenuItem>\n                        </Select>\n                        <FormHelperText>{displayHelperText(FIELD.SEX)}</FormHelperText>\n                    </FormControl>\n\n            </form>\n\n            <div className = 'formSubmit'>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className='submitButton'\n                    onClick = {handleRegister}>\n                    Register\n                </Button>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/old/App';\nimport Login from './Pages/Login';\n\nimport './Styles/general.css';\n\nReactDOM.render(<Login/>, document.getElementById('root'));","// React Imports\nimport React from 'react';\n\n// Styles\nimport './styles.css'\n\n// Material-UI Components\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// Components\nimport LoginComponent from '../../Components/LoginComponent';\nimport RegisterComponent from '../../Components/RegisterComponent';\n\n// Model\n\n// Services\n\n// Icons\n\n\nexport default function Login(){\n    enum TABS {\n        Login,\n        Register\n    }\n\n    const [selectedTab, setSelectedTab] = React.useState(TABS.Login);\n\n    function renderActiveTab(){\n        switch (selectedTab) {\n            case TABS.Login:\n                return <LoginComponent/>\n            case TABS.Register:\n                return <RegisterComponent/>\n            default:\n                return <h1>Falha no sistema</h1>\n        }\n    }\n\n    return(\n        <div className=\"login-container\">\n            {renderActiveTab()}\n\n            <Paper square className='bottomTabs'>\n                <Tabs\n                value={selectedTab}\n                onChange={(event, value) => setSelectedTab(value) }\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n                aria-label=\"icon label tabs example\">\n                    <Tab value = {TABS.Login}    label=\"Login\" />\n                    <Tab value = {TABS.Register} label=\"Create account\" />\n                </Tabs>\n            </Paper>\n\n      </div>\n    );\n}"],"sourceRoot":""}